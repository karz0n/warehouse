[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[color]
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = red reverse
    local = blue
    remote = green

[color "diff"]
    meta = yellow
    frag = magenta
    old = red bold
    new = green
    plain = white

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[push]
    default = current

[pull]
    default = current

[diff]
    mnemonicprefix = true

[branch]
    autosetuprebase = always
    
[apply]
    whitespace = nowarn

[alias]
	# List commits in short form (branch/tag, in colors)
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	# List commits in short form with dates (branch/tag, in colors)
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	# List commits in short form with relative dates (branch/tag, in colors)
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	# List commits showing changed files
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# List with no colors
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	# Default look for short log
	le = log --oneline --decorate

	# Show the history of a file
	filelog = log -u
	fl = log -u

	# Show modified files in last commit
	dl = "!git ll -1"
	# Show a diff last commit
	dlc = "diff --cached HEAD^"
	# Show content (full diff) of a commit given a revision
	dr = "!f() { git diff "$1"^.."$1"; }; f"
	lc = "!f() { git ll "$1"^.."$1"; }; f"
	diffr = "!f() { git diff "$1"^.."$1"; }; f"

	# Find a file path in codebase
	f = "!git ls-files | grep -i"

	# Search/grep your entire codebase for a string
	grep = "grep -Ii"
	gr = "grep -Ii"

	# Grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

	# List all aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# Rename [branch] to done-[branch]
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

	# Assume files
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

	# Tag aliases
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0

	# Merge aliases
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"

	# Basic Shortcuts
	cp = cherry-pick
	st = status -s
	cl = clone
	ci = commit
	co = checkout
	br = branch
	diff = diff --word-diff
	dc = diff --cached

	# Reset Commands
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	# Stash aliases
	sl = stash list
	sa = stash apply
	ss = stash save

[rebase]
  	autosquash = true
